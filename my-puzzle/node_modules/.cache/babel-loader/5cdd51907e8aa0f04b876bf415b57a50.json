{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jin Sunwoo\\\\Desktop\\\\practicehtml\\\\Puzzle\\\\my-puzzle\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport bluePiece from \"./images/blue.png\";\nimport orangePiece from \"./images/orange.png\";\nimport redPiece from \"./images/red.png\";\nimport greenPiece from \"./images/green.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ogPieces = [{\n  key: 0,\n  type: 1,\n  orientation: 1,\n  location: \"shuffled\"\n}, {\n  key: 1,\n  type: 1,\n  orientation: 1,\n  location: \"shuffled\"\n}, {\n  key: 2,\n  type: 1,\n  orientation: 1,\n  location: \"shuffled\"\n}, {\n  key: 3,\n  type: 1,\n  orientation: 1,\n  location: \"shuffled\"\n}, {\n  key: 4,\n  type: 2,\n  orientation: 1,\n  location: \"shuffled\"\n}, {\n  key: 5,\n  type: 2,\n  orientation: 1,\n  location: \"shuffled\"\n}, {\n  key: 6,\n  type: 3,\n  orientation: 1,\n  location: \"shuffled\"\n}, {\n  key: 7,\n  type: 3,\n  orientation: 1,\n  location: \"shuffled\"\n}, {\n  key: 8,\n  type: 4,\n  orientation: 1,\n  location: \"shuffled\"\n}]; // function app() {\n//   const [shuffled, setShuffled] = useState(pieces);\n// }\n\nfunction App() {\n  _s();\n\n  const [shuffled, setShuffled] = useState(ogPieces);\n  const [board, setBoard] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n  console.log(\"hello\", shuffled);\n  const [clickedPiece, setClickedPiece] = useState(0);\n\n  const clickPiece = num => {\n    console.log(\"clickPiece\");\n  };\n\n  const clickBoardPiece = event => {\n    console.log(\"clickboardpiece\");\n    console.log(\"pieces: \", shuffled);\n  };\n\n  const clickBoard = event => {\n    console.log(\"clickBoard\");\n    console.log(\"spot is \", event.currentTarget.getAttribute(\"id\"));\n    console.log(event.currentTarget);\n  };\n\n  useEffect(() => {\n    console.log(\"called useeffect\");\n  });\n\n  const fillRow = (spot, i, j) => {\n    if (spot === 0) {\n      console.log(\"bye\");\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        id: (i + j).toString,\n        \"has-piece\": \"No\",\n        onClick: e => {\n          clickBoard(e);\n        },\n        children: i + j\n      }, (i + j).toString, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this);\n    } else {\n      console.log(\"Hello\");\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        id: (i + j).toString,\n        \"has-piece\": \"No\",\n        onClick: e => {\n          clickBoard(e);\n        },\n        children: /*#__PURE__*/_jsxDEV(Piece, {\n          pieceDict: spot,\n          clickPiece: clickPiece,\n          clickBoard: clickBoard,\n          clicked: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, (i + j).toString, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: board.slice(0, 3).map((spot, i) => {\n              return fillRow(spot, i, 1);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: board.slice(3, 6).map((spot, i) => {\n              return fillRow(spot, i, 4);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), board.slice(6, 9).map((spot, i) => {\n            return fillRow(spot, i, 7);\n          }), /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          console.log(shuffled);\n        },\n        children: \"Pieces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          console.log(clickedPiece);\n        },\n        children: \"ClickedPiece\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pieces\",\n        children: shuffled.map(piece => {\n          return /*#__PURE__*/_jsxDEV(Piece, {\n            pieceDict: piece,\n            clickPiece: clickPiece,\n            clickBoard: clickBoard,\n            clicked: piece.key == clickedPiece\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"+wIP0ooPD+otkXyKVfMAGArr388=\");\n\n_c = App;\n\nconst Piece = props => {\n  const {\n    pieceDict,\n    clickPiece,\n    clickBoardPiece,\n    clicked\n  } = props;\n\n  if (clicked) {\n    return /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"Clicked\",\n      onClick: () => {\n        clickPiece();\n      },\n      children: pieceDict.type\n    }, pieceDict.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"article\", {\n      onClick: () => {\n        clickPiece(pieceDict.key);\n      },\n      children: pieceDict.type\n    }, pieceDict.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c2 = Piece;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Piece\");","map":{"version":3,"sources":["C:/Users/Jin Sunwoo/Desktop/practicehtml/Puzzle/my-puzzle/src/App.js"],"names":["useState","useEffect","bluePiece","orangePiece","redPiece","greenPiece","ogPieces","key","type","orientation","location","App","shuffled","setShuffled","board","setBoard","console","log","clickedPiece","setClickedPiece","clickPiece","num","clickBoardPiece","event","clickBoard","currentTarget","getAttribute","fillRow","spot","i","j","toString","e","slice","map","piece","Piece","props","pieceDict","clicked"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;;;AAEA,MAAMC,QAAQ,GAAG,CACf;AACEC,EAAAA,GAAG,EAAE,CADP;AACUC,EAAAA,IAAI,EAAE,CADhB;AACmBC,EAAAA,WAAW,EAAE,CADhC;AACmCC,EAAAA,QAAQ,EAAE;AAD7C,CADe,EAIf;AACEH,EAAAA,GAAG,EAAE,CADP;AACUC,EAAAA,IAAI,EAAE,CADhB;AACmBC,EAAAA,WAAW,EAAE,CADhC;AACmCC,EAAAA,QAAQ,EAAE;AAD7C,CAJe,EAOf;AACEH,EAAAA,GAAG,EAAE,CADP;AACUC,EAAAA,IAAI,EAAE,CADhB;AACmBC,EAAAA,WAAW,EAAE,CADhC;AACmCC,EAAAA,QAAQ,EAAE;AAD7C,CAPe,EAUf;AACEH,EAAAA,GAAG,EAAE,CADP;AACUC,EAAAA,IAAI,EAAE,CADhB;AACmBC,EAAAA,WAAW,EAAE,CADhC;AACmCC,EAAAA,QAAQ,EAAE;AAD7C,CAVe,EAaf;AACEH,EAAAA,GAAG,EAAE,CADP;AACUC,EAAAA,IAAI,EAAE,CADhB;AACmBC,EAAAA,WAAW,EAAE,CADhC;AACmCC,EAAAA,QAAQ,EAAE;AAD7C,CAbe,EAgBf;AACEH,EAAAA,GAAG,EAAE,CADP;AACUC,EAAAA,IAAI,EAAE,CADhB;AACmBC,EAAAA,WAAW,EAAE,CADhC;AACmCC,EAAAA,QAAQ,EAAE;AAD7C,CAhBe,EAmBf;AACEH,EAAAA,GAAG,EAAE,CADP;AACUC,EAAAA,IAAI,EAAE,CADhB;AACmBC,EAAAA,WAAW,EAAE,CADhC;AACmCC,EAAAA,QAAQ,EAAE;AAD7C,CAnBe,EAsBf;AACEH,EAAAA,GAAG,EAAE,CADP;AACUC,EAAAA,IAAI,EAAE,CADhB;AACmBC,EAAAA,WAAW,EAAE,CADhC;AACmCC,EAAAA,QAAQ,EAAE;AAD7C,CAtBe,EAyBf;AACEH,EAAAA,GAAG,EAAE,CADP;AACUC,EAAAA,IAAI,EAAE,CADhB;AACmBC,EAAAA,WAAW,EAAE,CADhC;AACmCC,EAAAA,QAAQ,EAAE;AAD7C,CAzBe,CAAjB,C,CA8BA;AACA;AAEA;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAACM,QAAD,CAAxC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,CAAD,CAAlC;AACAgB,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,QAArB;AAEA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,CAAD,CAAhD;;AAEA,QAAMoB,UAAU,GAAIC,GAAD,IAAS;AAC1BL,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,GAFD;;AAIA,QAAMK,eAAe,GAAIC,KAAD,IAAW;AACjCP,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBL,QAAxB;AACD,GAHD;;AAKA,QAAMY,UAAU,GAAID,KAAD,IAAW;AAC5BP,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBM,KAAK,CAACE,aAAN,CAAoBC,YAApB,CAAiC,IAAjC,CAAxB;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYM,KAAK,CAACE,aAAlB;AACD,GAJD;;AAMAxB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,GAFQ,CAAT;;AAIA,QAAMU,OAAO,GAAG,CAACC,IAAD,EAAOC,CAAP,EAAUC,CAAV,KAAgB;AAC9B,QAAIF,IAAI,KAAK,CAAb,EAAgB;AACdZ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,0BACE;AAEE,QAAA,EAAE,EAAE,CAACY,CAAC,GAACC,CAAH,EAAMC,QAFZ;AAGE,qBAAU,IAHZ;AAIE,QAAA,OAAO,EAAGC,CAAD,IAAO;AAACR,UAAAA,UAAU,CAACQ,CAAD,CAAV;AAAc,SAJjC;AAAA,kBAMGH,CAAC,GAACC;AANL,SACO,CAACD,CAAC,GAACC,CAAH,EAAMC,QADb;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAZD,MAYO;AACLf,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,0BACE;AAEI,QAAA,EAAE,EAAE,CAACY,CAAC,GAACC,CAAH,EAAMC,QAFd;AAGI,qBAAU,IAHd;AAII,QAAA,OAAO,EAAGC,CAAD,IAAO;AAACR,UAAAA,UAAU,CAACQ,CAAD,CAAV;AAAc,SAJnC;AAAA,+BAME,QAAC,KAAD;AACE,UAAA,SAAS,EAAEJ,IADb;AAEE,UAAA,UAAU,EAAER,UAFd;AAGE,UAAA,UAAU,EAAEI,UAHd;AAIE,UAAA,OAAO,EAAE;AAJX;AAAA;AAAA;AAAA;AAAA;AANF,SACS,CAACK,CAAC,GAACC,CAAH,EAAMC,QADf;AAAA;AAAA;AAAA;AAAA,cADF;AAeD;AACF,GA/BD;;AAiCA,sBACE;AAAA,2BACE;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA,sBACGjB,KAAK,CAACmB,KAAN,CAAY,CAAZ,EAAe,CAAf,EAAkBC,GAAlB,CAAsB,CAACN,IAAD,EAAOC,CAAP,KAAa;AAClC,qBAAOF,OAAO,CAACC,IAAD,EAAOC,CAAP,EAAU,CAAV,CAAd;AACD,aAFA;AADH;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AAAA,sBACGf,KAAK,CAACmB,KAAN,CAAY,CAAZ,EAAe,CAAf,EAAkBC,GAAlB,CAAsB,CAACN,IAAD,EAAOC,CAAP,KAAa;AAClC,qBAAOF,OAAO,CAACC,IAAD,EAAOC,CAAP,EAAU,CAAV,CAAd;AACD,aAFA;AADH;AAAA;AAAA;AAAA;AAAA,kBANF,EAWKf,KAAK,CAACmB,KAAN,CAAY,CAAZ,EAAe,CAAf,EAAkBC,GAAlB,CAAsB,CAACN,IAAD,EAAOC,CAAP,KAAa;AAClC,mBAAOF,OAAO,CAACC,IAAD,EAAOC,CAAP,EAAU,CAAV,CAAd;AACD,WAFA,CAXL,eAcE;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAsBA;AAAQ,QAAA,OAAO,EAAE,MAAM;AAACb,UAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAAsB,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBA,eAuBA;AAAQ,QAAA,OAAO,EAAE,MAAM;AAACI,UAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AAA0B,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBA,eAwBA;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,kBACGN,QAAQ,CAACsB,GAAT,CAAcC,KAAD,IAAW;AACrB,8BACE,QAAC,KAAD;AACE,YAAA,SAAS,EAAEA,KADb;AAEE,YAAA,UAAU,EAAEf,UAFd;AAGE,YAAA,UAAU,EAAEI,UAHd;AAIE,YAAA,OAAO,EAAGW,KAAK,CAAC5B,GAAN,IAAaW;AAJzB;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD,SATF;AADH;AAAA;AAAA;AAAA;AAAA,cAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA0CD;;GArGQP,G;;KAAAA,G;;AAuGT,MAAMyB,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAM;AAACC,IAAAA,SAAD;AAAYlB,IAAAA,UAAZ;AAAwBE,IAAAA,eAAxB;AAAyCiB,IAAAA;AAAzC,MAAoDF,KAA1D;;AACA,MAAIE,OAAJ,EAAa;AACX,wBACE;AAAS,MAAA,SAAS,EAAC,SAAnB;AAAiD,MAAA,OAAO,EAAE,MAAM;AAACnB,QAAAA,UAAU;AAAG,OAA9E;AAAA,gBACGkB,SAAS,CAAC9B;AADb,OAAkC8B,SAAS,CAAC/B,GAA5C;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND,MAMO;AACL,wBACE;AAA6B,MAAA,OAAO,EAAE,MAAM;AAACa,QAAAA,UAAU,CAACkB,SAAS,CAAC/B,GAAX,CAAV;AAA0B,OAAvE;AAAA,gBACG+B,SAAS,CAAC9B;AADb,OAAc8B,SAAS,CAAC/B,GAAxB;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;AAEF,CAhBD;;MAAM6B,K;AAkBN,eAAezB,GAAf","sourcesContent":["import './App.css';\nimport {useState, useEffect} from 'react';\nimport bluePiece from \"./images/blue.png\";\nimport orangePiece from \"./images/orange.png\";\nimport redPiece from \"./images/red.png\";\nimport greenPiece from \"./images/green.png\";\n\nconst ogPieces = [\n  {\n    key: 0, type: 1, orientation: 1, location: \"shuffled\"\n  },\n  {\n    key: 1, type: 1, orientation: 1, location: \"shuffled\"\n  },\n  {\n    key: 2, type: 1, orientation: 1, location: \"shuffled\"\n  },\n  {\n    key: 3, type: 1, orientation: 1, location: \"shuffled\"\n  },\n  {\n    key: 4, type: 2, orientation: 1, location: \"shuffled\"\n  },\n  {\n    key: 5, type: 2, orientation: 1, location: \"shuffled\"\n  },\n  {\n    key: 6, type: 3, orientation: 1, location: \"shuffled\"\n  },\n  {\n    key: 7, type: 3, orientation: 1, location: \"shuffled\"\n  },\n  {\n    key: 8, type: 4, orientation: 1, location: \"shuffled\"\n  }\n]\n\n// function app() {\n//   const [shuffled, setShuffled] = useState(pieces);\n\n// }\n\nfunction App() {\n  const [shuffled, setShuffled] = useState(ogPieces);\n  const [board, setBoard] = useState([0,0,0,0,0,0,0,0,0]);\n  console.log(\"hello\", shuffled);\n\n  const [clickedPiece, setClickedPiece] = useState(0);\n  \n  const clickPiece = (num) => {\n    console.log(\"clickPiece\");\n  }\n\n  const clickBoardPiece = (event) => {\n    console.log(\"clickboardpiece\");\n    console.log(\"pieces: \", shuffled);\n  }\n\n  const clickBoard = (event) => {\n    console.log(\"clickBoard\");\n    console.log(\"spot is \", event.currentTarget.getAttribute(\"id\"));\n    console.log(event.currentTarget);\n  }\n  \n  useEffect(() => {\n    console.log(\"called useeffect\");\n  });\n  \n  const fillRow = (spot, i, j) => {\n    if (spot === 0) {\n      console.log(\"bye\");\n      return (\n        <td\n          key={(i+j).toString}\n          id={(i+j).toString}\n          has-piece=\"No\"\n          onClick={(e) => {clickBoard(e)}}\n        >\n          {i+j}\n        </td>\n      )\n    } else {\n      console.log(\"Hello\");\n      return (\n        <td\n            key={(i+j).toString}\n            id={(i+j).toString}\n            has-piece=\"No\"\n            onClick={(e) => {clickBoard(e)}}\n        >\n          <Piece \n            pieceDict={spot}\n            clickPiece={clickPiece} \n            clickBoard={clickBoard}\n            clicked={false}\n          />\n        </td>\n      )\n    }      \n  }\n\n  return (\n    <>\n      <div>\n        <table>\n          <tbody>\n            <tr>\n              {board.slice(0, 3).map((spot, i) => {\n                return fillRow(spot, i, 1);\n              })}\n            </tr>\n            <tr>\n              {board.slice(3, 6).map((spot, i) => {\n                return fillRow(spot, i, 4);\n              })}\n            </tr>\n              {board.slice(6, 9).map((spot, i) => {\n                return fillRow(spot, i, 7);\n              })}\n            <tr>\n\n            </tr>\n          </tbody>\n\n      </table>\n      <button onClick={() => {console.log(shuffled)}}>Pieces</button>\n      <button onClick={() => {console.log(clickedPiece)}}>ClickedPiece</button>\n      <div className='pieces'>\n        {shuffled.map((piece) => {\n            return (\n              <Piece \n                pieceDict={piece} \n                clickPiece={clickPiece} \n                clickBoard={clickBoard}\n                clicked={(piece.key == clickedPiece)}\n              />\n            )\n          }\n        )}\n      </div>\n      </div>\n    </>\n  );\n}\n\nconst Piece = (props) => {\n  const {pieceDict, clickPiece, clickBoardPiece, clicked} = props;\n  if (clicked) {\n    return (\n      <article className=\"Clicked\" key={pieceDict.key} onClick={() => {clickPiece()}}>\n        {pieceDict.type}\n      </article>\n      )\n  } else {\n    return (\n      <article key={pieceDict.key} onClick={() => {clickPiece(pieceDict.key)}}>\n        {pieceDict.type}\n      </article>\n    )\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}