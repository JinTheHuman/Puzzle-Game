{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jin Sunwoo\\\\Desktop\\\\practicehtml\\\\Puzzle\\\\my-puzzle\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport bluePiece from \"./images/blue.png\";\nimport orangePiece from \"./images/orange.png\";\nimport redPiece from \"./images/red.png\";\nimport greenPiece from \"./images/green.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ogPieces = [{\n  key: 0,\n  type: 1,\n  orientation: 1,\n  location: \"shuffled\"\n}, {\n  key: 1,\n  type: 1,\n  orientation: 1,\n  location: \"shuffled\"\n}, {\n  key: 2,\n  type: 1,\n  orientation: 1,\n  location: \"shuffled\"\n}, {\n  key: 3,\n  type: 1,\n  orientation: 1,\n  location: \"shuffled\"\n}, {\n  key: 4,\n  type: 2,\n  orientation: 1,\n  location: \"shuffled\"\n}, {\n  key: 5,\n  type: 2,\n  orientation: 1,\n  location: \"shuffled\"\n}, {\n  key: 6,\n  type: 3,\n  orientation: 1,\n  location: \"shuffled\"\n}, {\n  key: 7,\n  type: 3,\n  orientation: 1,\n  location: \"shuffled\"\n}, {\n  key: 8,\n  type: 4,\n  orientation: 1,\n  location: \"shuffled\"\n}]; // function app() {\n//   const [shuffled, setShuffled] = useState(pieces);\n// }\n\nfunction App() {\n  _s();\n\n  const [shuffled, setShuffled] = useState(ogPieces);\n  const [board, setBoard] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0]);\n  console.log(\"hello\", shuffled);\n  const [clickedPiece, setClickedPiece] = useState(0);\n\n  const clickPiece = num => {\n    console.log(\"clickPiece\");\n\n    if (num === clickedPiece) {\n      setClickedPiece(0);\n    } else {\n      setClickedPiece(num);\n    }\n\n    setPieces(pieces);\n  };\n\n  const clickBoardPiece = event => {\n    console.log(\"clickboardpiece\");\n    console.log(\"pieces: \", pieces);\n    setPieces(oldpieces => {\n      console.log(\"oldpieces\", oldpieces);\n      console.log(\"hello\", event.currentTarget.textContent);\n      oldpieces.push(parseInt(event.currentTarget.textContent));\n      return oldpieces;\n    });\n    document.getElementById(event.currentTarget.getAttribute(\"spot\")).setAttribute(\"has-piece\", \"0\");\n    settings[event.currentTarget.getAttribute(\"spot\") - 1](event.currentTarget.getAttribute(\"spot\"));\n  };\n\n  const clickBoard = event => {\n    console.log(\"clickBoard\");\n    console.log(\"spot is \", event.currentTarget.getAttribute(\"id\"));\n    console.log(event.currentTarget);\n    let spot = event.currentTarget.getAttribute(\"id\");\n\n    if (clickedPiece != 0 && event.currentTarget.getAttribute(\"has-piece\") == '0') {\n      let newPieces = pieces.filter(piece => piece != clickedPiece);\n      setPieces(oldPieces => {\n        return newPieces;\n      });\n      settings[parseInt(spot) - 1]( /*#__PURE__*/_jsxDEV(\"article\", {\n        spot: spot,\n        onClick: e => {\n          clickBoardPiece(e);\n        },\n        children: clickedPiece\n      }, clickedPiece, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 36\n      }, this));\n      setClickedPiece(0);\n      event.currentTarget.setAttribute('has-piece', '1');\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"called useeffect\");\n    setPieces(pieces);\n    setClickedPiece(clickedPiece);\n    console.log(\"pieces \", pieces);\n    console.log(\"clicked Piece \", clickedPiece);\n  });\n\n  const fillRow = (spot, i, j) => {\n    if (spot === 0) {\n      console.log(\"bye\");\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        id: (i + j).toString,\n        \"has-piece\": \"No\",\n        onClick: e => {\n          clickBoard(e);\n        },\n        children: i + j\n      }, (i + j).toString, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this);\n    } else {\n      console.log(\"Hello\");\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        id: (i + j).toString,\n        \"has-piece\": \"No\",\n        onClick: e => {\n          clickBoard(e);\n        },\n        children: /*#__PURE__*/_jsxDEV(Piece, {\n          pieceDict: spot,\n          clickPiece: clickPiece,\n          clickBoard: clickBoard,\n          clicked: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, (i + j).toString, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: board.slice(0, 3).map((spot, i) => {\n              return fillRow(spot, i, 0);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              id: \"4\",\n              \"has-piece\": \"0\",\n              onClick: e => {\n                clickBoard(e);\n              },\n              children: middleLeft\n            }, \"4\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              id: \"5\",\n              \"has-piece\": \"0\",\n              onClick: e => {\n                clickBoard(e);\n              },\n              children: middle\n            }, \"5\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              id: \"6\",\n              \"has-piece\": \"0\",\n              onClick: e => {\n                clickBoard(e);\n              },\n              children: middleRight\n            }, \"6\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              id: \"7\",\n              \"has-piece\": \"0\",\n              onClick: e => {\n                clickBoard(e);\n              },\n              children: bottomLeft\n            }, \"7\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              id: \"8\",\n              \"has-piece\": \"0\",\n              onClick: e => {\n                clickBoard(e);\n              },\n              children: bottom\n            }, \"8\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              id: \"9\",\n              \"has-piece\": \"0\",\n              onClick: e => {\n                clickBoard(e);\n              },\n              children: bottomRight\n            }, \"9\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          console.log(pieces);\n        },\n        children: \"Pieces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          console.log(clickedPiece);\n        },\n        children: \"ClickedPiece\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pieces\",\n        children: shuffled.map(piece => {\n          return /*#__PURE__*/_jsxDEV(Piece, {\n            pieceDict: piece,\n            clickPiece: clickPiece,\n            clickBoard: clickBoard,\n            clicked: piece.key == clickedPiece\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"+wIP0ooPD+otkXyKVfMAGArr388=\");\n\n_c = App;\n\nconst Piece = props => {\n  const {\n    pieceDict,\n    clickPiece,\n    clickBoardPiece,\n    clicked\n  } = props;\n\n  if (clicked) {\n    return /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"Clicked\",\n      onClick: () => {\n        clickPiece();\n      },\n      children: pieceDict.type\n    }, pieceDict.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"article\", {\n      onClick: () => {\n        clickPiece(pieceDict.key);\n      },\n      children: pieceDict.type\n    }, pieceDict.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c2 = Piece;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Piece\");","map":{"version":3,"sources":["C:/Users/Jin Sunwoo/Desktop/practicehtml/Puzzle/my-puzzle/src/App.js"],"names":["useState","useEffect","bluePiece","orangePiece","redPiece","greenPiece","ogPieces","key","type","orientation","location","App","shuffled","setShuffled","board","setBoard","console","log","clickedPiece","setClickedPiece","clickPiece","num","setPieces","pieces","clickBoardPiece","event","oldpieces","currentTarget","textContent","push","parseInt","document","getElementById","getAttribute","setAttribute","settings","clickBoard","spot","newPieces","filter","piece","oldPieces","e","fillRow","i","j","toString","slice","map","middleLeft","middle","middleRight","bottomLeft","bottom","bottomRight","Piece","props","pieceDict","clicked"],"mappings":"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","sourcesContent":["import './App.css';\nimport {useState, useEffect} from 'react';\nimport bluePiece from \"./images/blue.png\";\nimport orangePiece from \"./images/orange.png\";\nimport redPiece from \"./images/red.png\";\nimport greenPiece from \"./images/green.png\";\n\nconst ogPieces = [\n  {\n    key: 0, type: 1, orientation: 1, location: \"shuffled\"\n  },\n  {\n    key: 1, type: 1, orientation: 1, location: \"shuffled\"\n  },\n  {\n    key: 2, type: 1, orientation: 1, location: \"shuffled\"\n  },\n  {\n    key: 3, type: 1, orientation: 1, location: \"shuffled\"\n  },\n  {\n    key: 4, type: 2, orientation: 1, location: \"shuffled\"\n  },\n  {\n    key: 5, type: 2, orientation: 1, location: \"shuffled\"\n  },\n  {\n    key: 6, type: 3, orientation: 1, location: \"shuffled\"\n  },\n  {\n    key: 7, type: 3, orientation: 1, location: \"shuffled\"\n  },\n  {\n    key: 8, type: 4, orientation: 1, location: \"shuffled\"\n  }\n]\n\n// function app() {\n//   const [shuffled, setShuffled] = useState(pieces);\n\n// }\n\nfunction App() {\n  const [shuffled, setShuffled] = useState(ogPieces);\n  const [board, setBoard] = useState([0,0,0,0,0,0,0,0,0]);\n  console.log(\"hello\", shuffled);\n\n  const [clickedPiece, setClickedPiece] = useState(0);\n  \n  const clickPiece = (num) => {\n    console.log(\"clickPiece\");\n    if (num === clickedPiece) {\n      setClickedPiece(0);\n    } else {\n      setClickedPiece(num);\n    }\n\n    setPieces(pieces);\n  }\n\n  const clickBoardPiece = (event) => {\n    console.log(\"clickboardpiece\");\n    console.log(\"pieces: \", pieces);\n    setPieces((oldpieces) => {\n      console.log(\"oldpieces\", oldpieces);\n      console.log(\"hello\", event.currentTarget.textContent);\n      oldpieces.push(parseInt(event.currentTarget.textContent));\n      return oldpieces;\n    });\n    document.getElementById(event.currentTarget.getAttribute(\"spot\")).setAttribute(\"has-piece\", \"0\");\n    settings[event.currentTarget.getAttribute(\"spot\") - 1](event.currentTarget.getAttribute(\"spot\"));\n  }\n\n  const clickBoard = (event) => {\n    console.log(\"clickBoard\");\n    console.log(\"spot is \", event.currentTarget.getAttribute(\"id\"));\n    console.log(event.currentTarget);\n    let spot = event.currentTarget.getAttribute(\"id\");\n    if (clickedPiece != 0 && event.currentTarget.getAttribute(\"has-piece\") == '0') {\n      let newPieces = pieces.filter(piece => piece != clickedPiece);\n      setPieces((oldPieces) => {return newPieces});\n      settings[parseInt(spot) - 1](<article key={clickedPiece} spot={spot} onClick={(e) => {clickBoardPiece(e)}}>{clickedPiece}</article>)\n      setClickedPiece(0);\n      event.currentTarget.setAttribute('has-piece', '1');\n    }\n  }\n  \n  useEffect(() => {\n    console.log(\"called useeffect\");\n    setPieces(pieces);\n    setClickedPiece(clickedPiece);\n    console.log(\"pieces \", pieces);\n    console.log(\"clicked Piece \", clickedPiece);\n  });\n  \n  const fillRow = (spot, i, j) => {\n    if (spot === 0) {\n      console.log(\"bye\");\n      return (\n        <td\n          key={(i+j).toString}\n          id={(i+j).toString}\n          has-piece=\"No\"\n          onClick={(e) => {clickBoard(e)}}\n        >\n          {i+j}\n        </td>\n      )\n    } else {\n      console.log(\"Hello\");\n      return (\n        <td\n            key={(i+j).toString}\n            id={(i+j).toString}\n            has-piece=\"No\"\n            onClick={(e) => {clickBoard(e)}}\n        >\n          <Piece \n            pieceDict={spot}\n            clickPiece={clickPiece} \n            clickBoard={clickBoard}\n            clicked={false}\n          />\n        </td>\n      )\n    }      \n  }\n\n  return (\n    <>\n      <div>\n        <table>\n          <tbody>\n            <tr>\n              {board.slice(0, 3).map((spot, i) => {\n                return fillRow(spot, i, 0);\n              })}\n            </tr>\n            <tr>\n              <td key=\"4\" id=\"4\" has-piece='0' onClick={(e) => {clickBoard(e)}}>{middleLeft}</td>\n              <td key=\"5\" id=\"5\" has-piece='0' onClick={(e) => {clickBoard(e)}}>{middle}</td>\n              <td key=\"6\" id=\"6\" has-piece='0' onClick={(e) => {clickBoard(e)}}>{middleRight}</td>\n            </tr>\n            <tr>\n              <td key=\"7\" id=\"7\" has-piece='0' onClick={(e) => {clickBoard(e)}}>{bottomLeft}</td>\n              <td key=\"8\" id=\"8\" has-piece='0' onClick={(e) => {clickBoard(e)}}>{bottom}</td>\n              <td key=\"9\" id=\"9\" has-piece='0' onClick={(e) => {clickBoard(e)}}>{bottomRight}</td>\n            </tr>\n          </tbody>\n\n      </table>\n      <button onClick={() => {console.log(pieces)}}>Pieces</button>\n      <button onClick={() => {console.log(clickedPiece)}}>ClickedPiece</button>\n      <div className='pieces'>\n        {shuffled.map((piece) => {\n            return (\n              <Piece \n                pieceDict={piece} \n                clickPiece={clickPiece} \n                clickBoard={clickBoard}\n                clicked={(piece.key == clickedPiece)}\n              />\n            )\n          }\n        )}\n      </div>\n      </div>\n    </>\n  );\n}\n\nconst Piece = (props) => {\n  const {pieceDict, clickPiece, clickBoardPiece, clicked} = props;\n  if (clicked) {\n    return (\n      <article className=\"Clicked\" key={pieceDict.key} onClick={() => {clickPiece()}}>\n        {pieceDict.type}\n      </article>\n      )\n  } else {\n    return (\n      <article key={pieceDict.key} onClick={() => {clickPiece(pieceDict.key)}}>\n        {pieceDict.type}\n      </article>\n    )\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}